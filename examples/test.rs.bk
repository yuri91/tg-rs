extern crate tg;
use tg::*;
use tg::errors::*;

fn run() -> Result<String> {
        let mut api = Api::new("232529554:AAG_xutLTVJvmzQ-pQp_6PNij_SCgE4uqCk");
        api.get_me()
}

fn main() {
    if let Err(ref e) = run() {
        println!("error: {}", e);

        for e in e.iter().skip(1) {
            println!("caused by: {}", e);
        }

        // The backtrace is not always generated. Try to run this example
        // with `RUST_BACKTRACE=1`.
        if let Some(backtrace) = e.backtrace() {
            println!("backtrace: {:?}", backtrace);
        }

        ::std::process::exit(1);
    }
}
